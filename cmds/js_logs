#! /usr/bin/env python3
import click

from Jumpscale import j


def get_client(redis_host, redis_port, redis_secret, session, date, context):
    client = j.clients.logger.get("js_logs")
    if redis_host:
        client.redis_host = redis_host
    if redis_port:
        client.redis_port = redis_port
    if redis_secret:
        client.redis_secret = redis_secret
    if session:
        client.session = session

    client.date = date
    client.context = context
    return client


@click.group()
def cli():
    pass


def common_options(function):
    click.option("--redis-host", default=None, help="redis host (defaults to localhost)")(function)
    click.option("--redis-port", default=6379, help="redis port (defaults to 6379)")(function)
    click.option("--redis-secret", default=None, help="redis secret (empty by default)")(function)
    click.option("--session", default=None, help="session name (defaults to jumpscale)")(function)
    click.option("--date", default=j.data.time.epoch, help="filter by date (epoch), defaults to today")(function)
    click.option("--context", default="main", help="current context (can be main, error...etc)")(function)
    return function


@click.command()
@common_options
def tail(redis_host, redis_port, redis_secret, session, date, context):
    """
    tail logs from session
    """
    client = get_client(redis_host, redis_port, redis_secret, session, date, context)
    client.tail()


@click.command()
@common_options
@click.option("--path", required=True, help="output file path")
def dump(redis_host, redis_port, redis_secret, session, date, context, path):
    """
    dump logs of session to file
    """
    client = get_client(redis_host, redis_port, redis_secret, session, date, context)
    client.dump(path)


cli.add_command(tail)
cli.add_command(dump)

if __name__ == "__main__":
    cli()
