user www www;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

error_log stderr notice;
daemon off;
pid logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    client_max_body_size 1M;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    include       mime.types;
    default_type  application/octet-stream;
    error_log {{logs_dir}}/error.log;
    access_log {{logs_dir}}/access.log;
    error_log /dev/stdout info;

    sendfile        on;
    keepalive_timeout 1d;
    proxy_connect_timeout  1d;
    proxy_send_timeout  1d;
    proxy_read_timeout  1d;

    lua_shared_dict auto_ssl 1m;
    lua_shared_dict auto_ssl_settings 64k;
    resolver 8.8.8.8 ipv6=off;

    init_by_lua_block {
      auto_ssl = (require "resty.auto-ssl").new()
      auto_ssl:set("allow_domain", function(domain)
        domain = domain:lower()
        domain, _ = domain:gsub("%s", "")

        -- skip localhost and .test domains
        if domain == "localhost" or domain:match(".test$") then
          return false
        end

        return true
      end)
      auto_ssl:init()
    }

    init_worker_by_lua_block {
      auto_ssl:init_worker()
    }

    #also used by letsencrypt
    server {
      listen 127.0.0.1:8999;
      client_body_buffer_size 128k;
      client_max_body_size 128k;

      location / {
        content_by_lua_block {
          auto_ssl:hook_server()
        }
      }
    }

    include servers/*.http.conf;

}

include servers/*.tcp.conf;
