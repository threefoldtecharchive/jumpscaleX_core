#only user itself can change = is the only owner
#no acl, only owner used
@url = jumpscale.bcdb.user.2
@acl = false
name** = ""
threebot_id** = ""                             #e.g. kristof.ibiza or kristof.3bot
email** = ""                             #optional, not required
pubkey = ""                             #public key of the 3bot
ipaddr** =  ""

@url = jumpscale.bcdb.circle.2          #circle of users
name** = "circle_bcdb"
description = ""
threebot_id** = ""                             #e.g. kristof.ibiza or kristof.3bot
email** = ""
user_members = (LI)
circle_members = (LI)                 #a set is (int,int) is link to (dmid,circleid)

@url = jumpscale.bcdb.acl.2
@acl = false
name** = "acl2"                                      #give a unique name to an acl, needs to be unique
description = ""                                #can be set by an owner, is to make it easy to understand
circles = (LO) !jumpscale.bcdb.acl.circle.2
users = (LO) !jumpscale.bcdb.acl.user.2
md5** = ""

@url = jumpscale.bcdb.acl.circle.2
@sub = true
name**=""
cid** = 1 (I)
rights = (LS)

@url = jumpscale.bcdb.acl.user.2
@sub = true
name**=""
uid** = 0 (I)
rights = (LS)


#acl's and users are std property the records being inserted in the BCDB

#
#url = jumpscale.bcdb.meta.2
#schemas = (LO) !jumpscale.bcdb.meta.schema.2
#namespaces = (LO) !jumpscale.bcdb.meta.namespace.2
#nid = 0  #namespace id
#name = "" (S)
#url_to_mid = {} (DICT)
#
#url = jumpscale.bcdb.meta.schema.2
#@sub = true
#url = ""
#text = ""
#md5 = ""
#hasdata = False (B) #if True then we know there needs to be id's in the metadata for the iterator

@url = jumpscale.bcdb.meta.namespace.2
name** = ""                              #chosen name needs to be unique
acls = (LO) !jumpscale.bcdb.acl.2
write_once = False (B)  #means in this namespace records can only be written once, no modification possible
